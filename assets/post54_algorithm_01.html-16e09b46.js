const t=JSON.parse(`{"key":"v-38d05ae7","path":"/zh/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/post54_algorithm_01.html","title":"数据结构和算法：了解时间复杂度","lang":"zh-CN","frontmatter":{"title":"数据结构和算法：了解时间复杂度","icon":"page","order":54,"date":"2023-08-30T00:00:00.000Z","category":["编程","Programming"],"tag":["时间复杂度","数据结构","算法"],"sticky":false,"star":true,"footer":null,"copyright":"无版权","description":"前言 时间复杂度来衡量一个算法的运行效率。 介绍 O(1) 最低的时间复杂度，也就是耗时与输入数据大小无关，无论输入数据增大多少倍，耗时/耗空间都不变。哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标。 O(n) 代表数据量增大几倍，耗时也增大几倍。比如常见的遍历算法。 O(LogN)","head":[["meta",{"property":"og:url","content":"https://blog.solex-inc.com/zh/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/post54_algorithm_01.html"}],["meta",{"property":"og:site_name","content":"Tim's Blog"}],["meta",{"property":"og:title","content":"数据结构和算法：了解时间复杂度"}],["meta",{"property":"og:description","content":"前言 时间复杂度来衡量一个算法的运行效率。 介绍 O(1) 最低的时间复杂度，也就是耗时与输入数据大小无关，无论输入数据增大多少倍，耗时/耗空间都不变。哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标。 O(n) 代表数据量增大几倍，耗时也增大几倍。比如常见的遍历算法。 O(LogN)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-30T07:18:29.000Z"}],["meta",{"property":"article:tag","content":"时间复杂度"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2023-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-30T07:18:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据结构和算法：了解时间复杂度\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-30T07:18:29.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]}],"git":{"createdTime":1693379740000,"updatedTime":1693379909000,"contributors":[{"name":"100vision","email":"lin.tixiang@gmail.com","commits":2}]},"readingTime":{"minutes":1.23,"words":368},"filePathRelative":"zh/信息技术/编程/post54_algorithm_01.md","localizedDate":"2023年8月30日","excerpt":"<h2> 前言</h2>\\n<blockquote>\\n<p>时间复杂度来衡量一个算法的运行效率。</p>\\n</blockquote>\\n<h2> 介绍</h2>\\n<p><strong>O(1)</strong></p>\\n<p>最低的时间复杂度，也就是耗时与输入数据大小无关，无论输入数据增大多少倍，耗时/耗空间都不变。哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在<strong>一次计算</strong>后找到目标。</p>\\n<p><strong>O(n)</strong></p>\\n<p>代表数据量增大几倍，耗时也增大几倍。比如常见的遍历算法。</p>\\n<p><strong>O(LogN)</strong></p>","autoDesc":true}`);export{t as data};
