import{_ as l,W as r,X as i,Z as e,$ as n,a0 as s,Y as t,G as o}from"./framework-b5535326.js";const c={},d=t('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>从前使用的免费SSL证书，开始从1年免费变成了3个月，不再降了。开始考虑使用<code>Let&#39;s Encrypt</code>免费证书，结合它的客户端实现自动续订。</p><h2 id="正文" tabindex="-1"><a class="header-anchor" href="#正文" aria-hidden="true">#</a> 正文</h2><h3 id="let-s-encrypt介绍" tabindex="-1"><a class="header-anchor" href="#let-s-encrypt介绍" aria-hidden="true">#</a> Let&#39;s Encrypt介绍</h3>',4),p={href:"https://letsencrypt.org/zh-cn/about/",target:"_blank",rel:"noopener noreferrer"},u=t('<p><strong>是否安全</strong></p><ul><li>很多大厂，例如<code>Cloudflare</code>都在使用。个人网站使用Let&#39;s Encrypt免费证书还是挺安全的。</li><li>小企业不想使用昂贵的商业收费的ssl证书也可以考虑。</li></ul><h3 id="acme" tabindex="-1"><a class="header-anchor" href="#acme" aria-hidden="true">#</a> ACME</h3><p><code>ACME</code> 是 <code>let&#39;s Encrypt</code>证书管理实现协议。实现ACME协议的客户端可以实现证书申请、续订等。</p><h3 id="acme客户端" tabindex="-1"><a class="header-anchor" href="#acme客户端" aria-hidden="true">#</a> ACME客户端</h3><p>实现ACME协议的客户端，有官方版本，也有第三方。</p>',6),h=e("code",null,"win-acme",-1),m={href:"https://www.win-acme.com",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.win-acme.com/manual/advanced-use/examples/exchange",target:"_blank",rel:"noopener noreferrer"},x=e("sup",{class:"footnote-ref"},[e("a",{href:"#footnote1"},"[1]"),e("a",{class:"footnote-anchor",id:"footnote-ref1"})],-1),b={href:"https://www.shiyanit.com/news-technical/136.html",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wacs.exe --source manual 
--host mail.example.com,webmail.example.com,autodiscover.example.com 
--certificatestore My 
--acl-fullcontrol &quot;network service,administrators&quot; --installation iis,script 
--installationsiteid 1 
--script &quot;./Scripts/ImportExchange.v2.ps1&quot; --scriptparameters &quot;&#39;{CertThumbprint}&#39; &#39;IIS,SMTP,IMAP&#39; 1 &#39;{CacheFile}&#39; &#39;{CachePassword}&#39; &#39;{CertFriendlyName}&#39;&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={href:"https://github.com/ebekker/ACMESharp",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"acme.sh",-1),y=e("sup",{class:"footnote-ref"},[e("a",{href:"#footnote2"},"[2]"),e("a",{class:"footnote-anchor",id:"footnote-ref2"})],-1),k=e("code",null,"certbot",-1),w={href:"https://certbot.eff.org/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://letsencrypt.org/docs/client-options/",target:"_blank",rel:"noopener noreferrer"},E={id:"acme-sh-and-nginx-reverse-proxy",tabindex:"-1"},M=e("a",{class:"header-anchor",href:"#acme-sh-and-nginx-reverse-proxy","aria-hidden":"true"},"#",-1),S={href:"http://ACME.sh",target:"_blank",rel:"noopener noreferrer"},q=t(`<p>以<code>proxy.example.cn</code>举例：</p><ul><li>创建目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/html/proxy.example.cn/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>开启http 80以支持acme.sh的<code>http validation</code></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>server {

        listen       80;
        server_name proxy.example.cn;
        location ^~ /.well-known/acme-challenge/ {
	        default_type &quot;text/plain&quot;;
	        allow all;
	        root /var/www/html/proxy.example.cn/;
  		 }
		location /{
	   		rewrite ^(.*)$  https://$host$1 permanent;
	   	}
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>网络防火墙上开启80端口。</p><p>acme.sh要求的，Let&#39;s Encrypt要发送http challenge进来。 步骤略</p></li><li><p>开始申请 Request the cert</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>acme.sh <span class="token parameter variable">--issue</span> <span class="token parameter variable">-d</span> proxy.example.cn <span class="token parameter variable">-w</span> /var/www/html/proxy.example.cn/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果申请成功，则输出一下类似信息：</p><p>[Mon Jun 3 16:50:13 CST 2024] Your cert is in: /root/.acme.sh/proxy.example.cn_ecc/proxy.example.cn.cer [Mon Jun 3 16:50:13 CST 2024] Your cert key is in: /root/.acme.sh/proxy.example.cn_ecc/proxy.example.cn.key [Mon Jun 3 16:50:13 CST 2024] The intermediate CA cert is in: /root/.acme.sh/proxy.example.cn_ecc/ca.cer [Mon Jun 3 16:50:13 CST 2024] And the full chain certs is there: /root/.acme.sh/proxy.example.cn_ecc/fullchain.cer</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
- 安装和拷贝证书。必须使用amce的命令。否则不会自动续订。


\`\`\`sh
acme.sh --install-cert -d proxy.example.cn \\
--cert-file      /usr/local/openresty/nginx/cert/qlik/proxy.example.cn.cer  \\
--key-file       /usr/local/openresty/nginx/cert//qlik/proxy.example.cn.key  \\
--fullchain-file /usr/local/openresty/nginx/cert/qlik/fullchain.cer \\
--reloadcmd     &quot;nginx -s reload&quot;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装成功后，输出一下类似信息：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Mon Jun  3 17:13:52 CST 2024] The domain &#39;proxy.example.cn&#39; seems to have a ECC cert already, lets use ecc cert.
[Mon Jun  3 17:13:52 CST 2024] Installing cert to: /usr/local/openresty/nginx/cert/qlik/proxy.example.cn.cer
[Mon Jun  3 17:13:52 CST 2024] Installing key to: /usr/local/openresty/nginx/cert//qlik/proxy.example.cn.key
[Mon Jun  3 17:13:52 CST 2024] Installing full chain to: /usr/local/openresty/nginx/cert/qlik/fullchain.cer
[Mon Jun  3 17:13:52 CST 2024] Run reload cmd: nginx -s reload
[Mon Jun  3 17:13:52 CST 2024] Reload success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>检查cron。auto renewal is scheduled to run by a cron job from the install process check and confirm that the cron job is already there.</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr class="footnotes-sep">`,15),I={class:"footnotes"},T={class:"footnotes-list"},A={id:"footnote1",class:"footnote-item"},L={href:"https://www.alitajran.com/install-free-lets-encrypt-certificate-in-exchange-server/",target:"_blank",rel:"noopener noreferrer"},J=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),N=e("li",{id:"footnote2",class:"footnote-item"},[e("p",null,[n("大致步骤： "),e("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎")])],-1);function P(R,V){const a=o("ExternalLinkIcon");return r(),i("div",null,[d,e("blockquote",null,[e("p",null,[n("Let's Encrypt 是免费、开放和自动化的证书颁发机构。由非盈利组织互联网安全研究小组（ISRG）运营。这里访问 "),e("a",p,[n("Let's Encrypt官网"),s(a)]),n(".")])]),u,e("ul",null,[e("li",null,[n("Windows平台的有 "),h,n(", 官网 "),e("a",m,[n("win-acme"),s(a)]),n(",可以支持IIS, Exchange服务器证书。详细请参考: "),e("a",v,[n("Example #1: Microsoft Exchange"),s(a)]),n(),x,n(", "),e("a",b,[n("Example 2#: IIS"),s(a)])])]),_,e("ul",null,[e("li",null,[e("p",null,[n("Windows平台的还有Powershell客户端实现，详见 "),e("a",f,[n("ACMESharp"),s(a)]),n("。不仅是Powershell实现，也是C#实现库。")])]),e("li",null,[e("p",null,[n("Linux平台下，有官方的"),g,n(),y,n(" 和"),k,n(", 详见:"),e("a",w,[n("Certbot Instructions"),s(a)]),n("。")])]),e("li",null,[e("p",null,[n("更多客户端可以参考："),e("a",C,[n("more client options"),s(a)])])])]),e("h3",E,[M,n(),e("a",S,[n("ACME.sh"),s(a)]),n(" and Nginx Reverse Proxy")]),q,e("section",I,[e("ol",T,[e("li",A,[e("p",null,[n("详细使用案例可以参考 "),e("a",L,[n("Install FREE Let’s Encrypt certificate in Exchange Server"),s(a)]),n(),J])]),N])])])}const j=l(c,[["render",P],["__file","post94_ssl_acme_letsencrypt_01.html.vue"]]);export{j as default};
