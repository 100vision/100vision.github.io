import{_ as o,W as i,X as l,Z as e,$ as a,a0 as s,Y as t,G as c}from"./framework-2e6688e7.js";const r="/assets/post45_db_mssql_copy_schema_create_scripts_options_schema_only-b15d817c.jpg",d="/assets/post45_db_mssql_copy_schema_create_scripts_progress-d3f53e47.jpg",p="/assets/post45_db_mssql_copy_schema_dacpac_exception-330b053e.jpg",u={},h=t(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>需求：有时需要根据现有数据库部署一个新数据库，新数据库要求同样的表结构和数据库对象，但不要有任何数据。在SQL Server里有集中方法。</p><h2 id="方法一-使用dbcc-clonedatabase指令" tabindex="-1"><a class="header-anchor" href="#方法一-使用dbcc-clonedatabase指令" aria-hidden="true">#</a> 方法一：使用DBCC CLONEDATABASE指令</h2><blockquote><p>推荐方法。自SQL Server 2016起，支持使用<code>DBCC</code> 来克隆一个不带任何数据的数据库结构。微软初衷是提供该指令来做数据库问题诊断和性能调优。</p></blockquote><h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3><ul><li>SQL server 数据库管理员账户</li><li>使用SQL Serve Management Studio (SSMS) 18.x</li></ul><h3 id="使用举例" tabindex="-1"><a class="header-anchor" href="#使用举例" aria-hidden="true">#</a> 使用举例</h3><ul><li>克隆一个数据库结构（不带数据，不带统计信息），执行：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DBCC</span> CLONEDATABASE <span class="token punctuation">(</span>mydb<span class="token punctuation">,</span> mydb_Clone<span class="token punctuation">)</span> <span class="token keyword">WITH</span> NO_STATISTICS<span class="token punctuation">,</span> NO_QUERYSTORE<span class="token punctuation">,</span>VERIFY_CLONEDB<span class="token punctuation">;</span>
GO
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>说明</strong></p><ul><li>其中 <code>mydb</code> 是源数据库名，<code>mydb_Clone</code>目标数据库名（数据库名可以自取）。</li><li>使用了<code>VERIFY_CLONEDB</code>命令选项，使得克隆出来的数据库会被验证，可用到生产环境；</li><li>执行时间视源数据库大小而定。一个200GB的数据库，大约使用1-2分钟克隆出一个空数据库。</li><li>如果顺利执行，一个新的数据库<code>mydb_Clone</code>将在当前数据库服务器上创建，只有数据库结构(Schema)，并且是<strong>只读</strong>状态。</li><li>如果顺利执行，将输出以下类似内容：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
已在 VERIFY_CLONE 中启用 NO_STATISTICS 和 NO_QUERYSTORE 选项。
已开始对“mydb”执行数据库克隆操作，目标为“mydb_Clone”。
已完成对“mydb”的数据库克隆。克隆数据库为“mydb_Clone”。
数据库“mydb_Clone”是克隆的数据库。
克隆数据库验证已通过。
DBCC 执行完毕。如果 DBCC 输出了错误信息，请与系统管理员联系。

完成时间: 2023-07-07T09:41:14.6053740+08:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">警告</p><p>微软官方不对这种克隆数据库提供技术支持。</p></div><div class="hint-container note"><p class="hint-container-title">注意</p><p>使用<code>DBCC CLONEDATABASE</code>使用数据库内部快照,克隆架构过程会在源数据库上使用数据库级别的锁，可考虑在非业务高峰上操作。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>新数据库将在源数据库所在的数据库服务器上创建,且是只读状态。如果需要把克隆出来的新数据库迁移到其他数据库,可以使用数据库备份还原或是其他方法</p></div>`,15),_=e("code",null,"DBCC CLONEDATABASE",-1),b={href:"https://learn.microsoft.com/en-us/sql/t-sql/database-console-commands/dbcc-clonedatabase-transact-sql?view=sql-server-ver16",target:"_blank",rel:"noopener noreferrer"},m=t('<h2 id="方法二-使用create-scripts" tabindex="-1"><a class="header-anchor" href="#方法二-使用create-scripts" aria-hidden="true">#</a> 方法二：使用Create Scripts</h2><blockquote><p>一般方法, 适用于较低版本的SQL。把源数据库当前架构和数据库对象生成脚本，然后在目标数据库服务器上执行脚本创建数据库。</p></blockquote><h3 id="准备-1" tabindex="-1"><a class="header-anchor" href="#准备-1" aria-hidden="true">#</a> 准备</h3><ul><li>SQL server 数据库管理员账户</li><li>使用SQL Serve Management Studio (SSMS)</li></ul><h3 id="使用举例-1" tabindex="-1"><a class="header-anchor" href="#使用举例-1" aria-hidden="true">#</a> 使用举例</h3><ul><li><p>选择目标数据库，右键【任务/Task】。</p></li><li><p>选择【生成脚本...】</p></li><li><p>在【生成脚本】向导中，选择【为整个数据库及所有数据库对象编写脚本】</p></li><li><p>在【生成脚本】的【设置脚本编写选项】中，点击【高级】，确认脚本类型是<code>仅限架构</code>,如下图： <img src="'+r+'" alt="schema only" loading="lazy"></p></li><li><p>指定脚本文件保存位置。</p></li><li><p>脚本生成执行过程，如下图：</p></li></ul><figure><img src="'+d+'" alt="scrits being saved" tabindex="0" loading="lazy"><figcaption>scrits being saved</figcaption></figure><ul><li>在目标数据库服务器上，执行该脚本即可。脚本将在目标服务器上创建一个同名数据库和同样数据库文件结构。可以修改匹配目标服务器环境。</li></ul><h2 id="方法三-使用dacpac-或-bacpac" tabindex="-1"><a class="header-anchor" href="#方法三-使用dacpac-或-bacpac" aria-hidden="true">#</a> 方法三：使用DACPAC 或 BACPAC</h2><blockquote><p>一种新方法，即 Data-Tier Application Package。初衷是迁移本地数据库到Azure。</p></blockquote><blockquote><p>使用<code>dacpac</code>可以提取架构和数据库对象到一个应用包文件,然后把该应用包文件导入到目标数据库中。在SSMS中，对应的操作是<code>提取数据层应用程序...</code>，是本文介绍的操作。导出的文件形式是<code>.dapac</code>，在目标数据库对应的操作是<code>部署数据层应用程序...</code></p></blockquote><blockquote><p>使用<code>bacpac</code>支持整个数据库数据。在SSMS中，对应的操作是<code>导出数据层应用程序...</code>是把整个源数据库导出，包含架构和数据，导出的文件形式是<code>.bapac</code>本文不覆盖。</p></blockquote><h3 id="准备-2" tabindex="-1"><a class="header-anchor" href="#准备-2" aria-hidden="true">#</a> 准备</h3><ul><li>SQL server 数据库管理员账户</li><li>使用SQL Serve Management Studio (SSMS) 18.x以上。</li></ul><h3 id="使用举例-2" tabindex="-1"><a class="header-anchor" href="#使用举例-2" aria-hidden="true">#</a> 使用举例</h3><ul><li>选择目标数据库</li><li>右键【任务】，点击【提取数据层应用程序...】</li><li>如果顺利执行，向导将生成一个<code>.dacpac</code>文件；</li><li>在目标数据库服务器上，右键【数据库】节点，选择【导入数据层应用程序...】</li><li>到对话框中，指定之前导出的dacpac文件。</li></ul>',16),S={href:"https://www.sqlshack.com/an-introduction-to-data-tier-applications-in-sql-server/",target:"_blank",rel:"noopener noreferrer"},g=e("h3",{id:"一些常见问题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一些常见问题","aria-hidden":"true"},"#"),a(" 一些常见问题")],-1),v=e("p",null,[e("strong",null,"问题1：在SSMS生成DAC包过程中，碰到以下类似架构验证错误（图）")],-1),k=e("figure",null,[e("img",{src:p,alt:"DAC Package creation failed",tabindex:"0",loading:"lazy"}),e("figcaption",null,"DAC Package creation failed")],-1),f=e("p",null,[e("strong",null,"解决办法")],-1),C=e("p",null,"关闭架构验证。这种异常一般是因为包导出进程对源数据库验证失败，验证失败的原因是发现数据库引用了不存在数据库对象，例如失效的链接数据库的对象，或不存在的表。",-1),q=e("p",null,"SSMS不提供关闭架构验证开关，需要使用其他工具，这些工具有：",-1),y=e("li",null,"Visual Studio",-1),x={href:"https://learn.microsoft.com/en-us/sql/azure-data-studio/download-azure-data-studio?view=sql-server-ver16&tabs=redhat-install%2Credhat-uninstall#download-azure-data-studio",target:"_blank",rel:"noopener noreferrer"},A={href:"https://learn.microsoft.com/en-us/sql/tools/sqlpackage/sqlpackage-download?view=sql-server-ver16",target:"_blank",rel:"noopener noreferrer"},D=t(`<blockquote><p>使用SQLPackage替代SSMS关闭架构验证，导出时使用<code>/p:VerifyExtraction=false</code>，部署时使用<code>/p:VerifyDeployment</code></p></blockquote><ul><li>生成dacpac包。进入安装位置 <code>C:\\Program Files\\Microsoft SQL Server\\160\\DAC\\bin</code> , 执行：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Program Files<span class="token punctuation">\\</span>Microsoft SQL Server<span class="token punctuation">\\</span><span class="token number">160</span><span class="token punctuation">\\</span>DAC<span class="token punctuation">\\</span>bin<span class="token operator">&gt;</span>SqlPackage.exe /action:Extract /TargetFile:<span class="token string">&quot;c:\\mydb.dacpac&quot;</span> /SourceConnectionString:<span class="token string">&quot;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=ecology;Data Source=mydb.example.com;TrustServerCertificate=true&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>发布部署dacpac包到目标数据库。执行：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Program Files<span class="token punctuation">\\</span>Microsoft SQL Server<span class="token punctuation">\\</span><span class="token number">160</span><span class="token punctuation">\\</span>DAC<span class="token punctuation">\\</span>bin<span class="token operator">&gt;</span>SqlPackage.exe /Action:Publish /p:VerifyDeployment<span class="token operator">=</span>false /SourceFile:<span class="token string">&quot;c:\\mydb.dacpac&quot;</span> /TargetDatabaseName: <span class="token operator">&lt;</span>DatabaseName<span class="token operator">&gt;</span> /TargetServerName:<span class="token string">&quot;&lt;Server Name&gt;&quot;</span>  /TargetTrustServerCertificate:True
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>问题2： 无法解析的引用</strong></p>`,6),E={href:"http://System.Web",target:"_blank",rel:"noopener noreferrer"},T=e("p",null,[e("strong",null,"解决办法")],-1),L=e("p",null,"<无>",-1),N={class:"hint-container tip"},B=e("p",{class:"hint-container-title"},"提示",-1),Q=e("code",null,"extract",-1),M=e("code",null,"/p:VerifyExtraction=false",-1),w=e("code",null,"publish",-1),I={href:"https://learn.microsoft.com/en-us/sql/tools/sqlpackage/sqlpackage?view=sql-server-ver16&redirectedfrom=MSDN",target:"_blank",rel:"noopener noreferrer"},O=e("blockquote",null,null,-1);function P(V,F){const n=c("ExternalLinkIcon");return i(),l("div",null,[h,e("p",null,[a("更多"),_,a("例子 点击 "),e("a",b,[a("这里"),s(n)])]),m,e("p",null,[a("具体使用，参考 "),e("a",S,[a("An introduction to Data-Tier applications in SQL Server"),s(n)])]),g,v,k,f,C,q,e("ul",null,[y,e("li",null,[a("Azure Data Studio "),e("a",x,[a("下载"),s(n)])]),e("li",null,[a("Sqlpackage Utility "),e("a",A,[a("下载"),s(n)])])]),D,e("p",null,[a("类似“Error SQL72009: ["),e("a",E,[a("System.Web"),s(n)]),a("] has an unresolved dependency to [System.Design]. A deployment script with correct ordering cannot be created.")]),T,L,e("div",N,[B,e("p",null,[a("该方法对数据库要求较高，稍有不对，要么在源库导出时出问题，要么在目标库导入时出问题，很多时候和数据库架构验证有关，"),Q,a("抽取时可以添加"),M,a("关闭架构验证，"),w,a("部署时使用。开关选项详细参考"),e("a",I,[a("这里"),s(n)])])]),O])}const R=o(u,[["render",P],["__file","post45_db_mssql_copy_schema.html.vue"]]);export{R as default};
