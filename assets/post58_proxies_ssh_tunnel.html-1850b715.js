import{_ as n,W as l,X as o,Z as e,$ as s,a0 as a,Y as t,G as r}from"./framework-b5535326.js";const c="/assets/post58_ssh_tun_ssh_login-c2eb0fb5.png",d="/assets/post58_proxies_ssh_tun_bitvise_client2server-afdac526.jpg",u="/assets/post58_proxies_ssh_tun_bitvise_client2server_rdp-b569bd5a.jpg",p="/assets/post58_proxies_ssh_tun_bitvise_socks5-1f6d79be.jpg",h={},g=t(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>一直在使用SSH隧道做http、socks5代理实现上网、联网。简单说，就是使用SSH服务器作为中转跳板，连接到其他服务器或服务。</p><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><p><strong>场景1：使用SSH通道访问远程服务</strong></p><blockquote><p>当前所在的网络有很严格的网络限制，目标端口只有开放22端口（SSH服务器），没有办法直接访问远程目标服务，例如MySQL Server（端口3306）,但SSH服务器可以到达MySQL服务器。</p></blockquote><p><strong>实现原理</strong></p><blockquote><p>SSH通道和端口转发.</p></blockquote><p>流量路径：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>本地客户端应用 (3306) &lt;—&gt; 本地代理端口 &lt;-&gt; 【本地ssh客户端端口】  *****&gt; 【SSH服务器端口】 &lt;——&gt; remote system (3306)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>客户端应用程序转发流量到本地代理端口</li><li>客户端应用流量走SSH通道到达SSH服务器</li><li>SSH服务器把流量转发给远程服务；</li></ul><p><strong>实现方法</strong></p>`,11),v=e("li",null,[s("如果客户端直接支持，直接设置连接。一些SQL客户端建立连接可以设置，例如"),e("code",null,"navicat"),s(" ；")],-1),_=e("code",null,"Bitvise SSH Client",-1),S={href:"https://www.bitvise.com/",target:"_blank",rel:"noopener noreferrer"},m=t(`<p><strong>场景2：使用SSH通道代理上网</strong></p><blockquote><p>解决上网问题。本机因网络限制（条件限制）无法上网，但可以连接到但SSH服务器,SSH服务器可以连接到Internet。</p></blockquote><p><strong>实现原理</strong></p><blockquote><p>使用一些SSH工具（产品）作为Socks5或HTTP代理,代理后的流量走SSH通道出去/回来。</p></blockquote><p>流量路径：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>本地客户端应用/浏览器 —&gt; 本地socks5/http代理端口 &lt;-&gt; 【本地ssh客户端端口】  *****&gt; 【SSH服务器端口】 &lt;—&gt; remote system (3306)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="具体实现" tabindex="-1"><a class="header-anchor" href="#具体实现" aria-hidden="true">#</a> 具体实现</h2><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows</h3><blockquote><p>Windows下可以使用Bitvise SSH Client实现以上2种场景需求。</p></blockquote><ul><li>步骤1：建立SSH连接</li></ul><figure><img src="`+c+'" alt="Establish a ssh conn" tabindex="0" loading="lazy"><figcaption>Establish a ssh conn</figcaption></figure><ul><li>步骤2：设置Bitvise SSH代理其他服务（例如：Microsoft RDP）（场景1）</li></ul><figure><img src="'+d+'" alt="client-to-server" tabindex="0" loading="lazy"><figcaption>client-to-server</figcaption></figure><p>使用举例（Microsoft RDP发起连接） <img src="'+u+'" alt="Remote Desktop connection" loading="lazy"></p><ul><li>步骤3：设置Bitvise SSH作为本地的Sock5/HTTP代理 (场景2)</li></ul><figure><img src="'+p+`" alt="socks5 settings" tabindex="0" loading="lazy"><figcaption>socks5 settings</figcaption></figure><p>使用举例（浏览器）：</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>注意：浏览器如果要使用Socks5代理需要按照OmegaSwitchy扩展。</p></div><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h3><blockquote><p>Linux下可以使用OpenSSH创建ssh通道并启动socks5代理</p></blockquote><p><strong>如果应用支持Socks5代理</strong></p><ul><li>步骤1：使用<code>ssh -D</code> 建立一个SSH连接。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#举例：建立ssh连接，并启动一个本地端口12345作为本地socks5代理
$ ssh -D 12345 myuser@remote_ssh_server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>步骤2：设置应用使用socks5代理参数（选项）。设置具体步骤参考应用帮助文档</li></ul><p><strong>如果应用不支持Socks5代理</strong></p><p>如果应用不支持socks5代理，只支持http代理，则：</p><ul><li>步骤1：使用<code>ssh -D</code> 建立SSH连接。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#举例：建立ssh连接，并启动一个本地端口12345作为本地socks5代理
$ ssh -D 12345 myuser@remote_ssh_server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>步骤2：在本地添加使用一个http代理，例如<code>Privoxy</code>，设置它的上游upstream代理socks5。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>forward-socks5   /               localhost:12345

#/etc/privoxy/config
# 更多privoxy选项 http://www.privoxy.org/user-manual/config.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>步骤3：设置应用使用Privoxy的http代理。</li></ul><p>这样流量路径是：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>本地应用 &lt;-&gt; Privoxy （http代理）&lt;-&gt; 本地socks5代理(12345) &lt;-&gt; ssh tunnel &lt;-&gt; 远程服务
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,33);function b(x,k){const i=r("ExternalLinkIcon");return l(),o("div",null,[g,e("ul",null,[v,e("li",null,[s("如果客户端应用不支持，可以使用一些SSH工具chuan，例如 "),_,s(),e("a",S,[s("https://www.bitvise.com/"),a(i)])])]),m])}const H=n(h,[["render",b],["__file","post58_proxies_ssh_tunnel.html.vue"]]);export{H as default};
