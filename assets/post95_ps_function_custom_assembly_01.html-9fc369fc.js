const e=JSON.parse(`{"key":"v-26aa4bfe","path":"/zh/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/post95_ps_function_custom_assembly_01.html","title":"脚本编程：Powershell：Powershell Function高阶使用:动态使用.Net Framwork类库（1）","lang":"zh-CN","frontmatter":{"title":"脚本编程：Powershell：Powershell Function高阶使用:动态使用.Net Framwork类库（1）","icon":"page","order":97,"date":"2024-06-13T00:00:00.000Z","category":["Scripting Language","脚本编程","Powershell"],"tag":["Powershell"],"sticky":false,"star":true,"description":"前言 我们知道Powershell可以调用.Net Framework的静态类，也就可以大大提高了脚本功能。熟悉C#的同学 可以在Powershell里面直接编写C#代码，然后在代码里面直接使用。 正文 来自阿里千问 直接定义","head":[["meta",{"property":"og:url","content":"https://blog.solex-inc.com/zh/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/post95_ps_function_custom_assembly_01.html"}],["meta",{"property":"og:site_name","content":"Tim's Blog"}],["meta",{"property":"og:title","content":"脚本编程：Powershell：Powershell Function高阶使用:动态使用.Net Framwork类库（1）"}],["meta",{"property":"og:description","content":"前言 我们知道Powershell可以调用.Net Framework的静态类，也就可以大大提高了脚本功能。熟悉C#的同学 可以在Powershell里面直接编写C#代码，然后在代码里面直接使用。 正文 来自阿里千问 直接定义"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-13T09:34:33.000Z"}],["meta",{"property":"article:tag","content":"Powershell"}],["meta",{"property":"article:published_time","content":"2024-06-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-13T09:34:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"脚本编程：Powershell：Powershell Function高阶使用:动态使用.Net Framwork类库（1）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-13T09:34:33.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"正文","slug":"正文","link":"#正文","children":[{"level":3,"title":"直接定义","slug":"直接定义","link":"#直接定义","children":[]},{"level":3,"title":"编译封装","slug":"编译封装","link":"#编译封装","children":[]}]}],"git":{"createdTime":1718271273000,"updatedTime":1718271273000,"contributors":[{"name":"100vision","email":"lin.tixiang@gmail.com","commits":1}]},"readingTime":{"minutes":2.54,"words":761},"filePathRelative":"zh/信息技术/编程/post95_ps_function_custom_assembly_01.md","localizedDate":"2024年6月13日","excerpt":"<h2> 前言</h2>\\n<p><a href=\\"http://xn--Powershell-yh4pjcv04g4u0c237cdfj1h0gohq.Net\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">我们知道Powershell可以调用.Net</a> Framework的静态类，也就可以大大提高了脚本功能。熟悉C#的同学</p>\\n<p>可以在Powershell里面直接编写C#代码，然后在代码里面直接使用。</p>\\n<h2> 正文</h2>\\n<blockquote>\\n<p>来自阿里千问</p>\\n</blockquote>\\n<h3> 直接定义</h3>","autoDesc":true}`);export{e as data};
