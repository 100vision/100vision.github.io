import{_ as l,W as n,X as a,Z as e,$ as o,a0 as t,Y as d,G as r}from"./framework-2e6688e7.js";const s="/assets/post20_iis_foder_perm_required-d97ede94.jpg",c="/assets/post20_iis_create_new_content_type-5b0e05ec.jpg",p={},h=d('<h2 id="需求和背景" tabindex="-1"><a class="header-anchor" href="#需求和背景" aria-hidden="true">#</a> 需求和背景</h2><p>解决一些需求：</p><ul><li>用户计算机没法访问Google官方商店安装扩展，则需要使用本地自建商店推送安装；</li><li>推送自开发的扩展（需要本地自建商店）；</li><li>管理员推送必安装的扩展（可以官方，也可以本地自建商店；</li></ul><div class="hint-container tip"><p class="hint-container-title">关于推送工具</p><p>如果有AD域环境，一般使用组策略推送下去。策略模板可以在Google有企业版Chrome Enterprise Bundle找到。模板文件上传到域控的PolicyDefinitions。</p></div><h2 id="如果通过官方商店的推送扩展" tabindex="-1"><a class="header-anchor" href="#如果通过官方商店的推送扩展" aria-hidden="true">#</a> 如果通过官方商店的推送扩展</h2><p>比较简单。但前提是，用户电脑可以科学上网。</p><ul><li>在Chrome Web商店里，找到要推送的扩展，并记下它的<code>Extension Id</code>。等下会用到；</li><li>新建一条组策略；编辑策略找到<code>Computer Configuration/Administrative Templates/Google/Extensions/Configure the list of force-installed apps and extensions</code></li><li>填入上面记下的<strong>Extension Id</strong>。</li><li>完。下次用户的Chrome就会自动安装该扩展；</li></ul><h2 id="如果通过本地自建商店推送扩展" tabindex="-1"><a class="header-anchor" href="#如果通过本地自建商店推送扩展" aria-hidden="true">#</a> 如果通过本地自建商店推送扩展</h2><p>麻烦一点，有3个任务：</p><ul><li>搭建本地商店；</li><li>打包自己的扩展（需要源码）；</li><li>推送扩展；</li></ul><h3 id="搭建本地商店" tabindex="-1"><a class="header-anchor" href="#搭建本地商店" aria-hidden="true">#</a> 搭建本地商店</h3><p>搭建本地商店就是需要一个简单的Web服务器。IIS/Apache等都可以。</p><div class="hint-container note"><p class="hint-container-title">注意</p><ol><li>要允许匿名访问，不做认证；2. 需要设置和添加一个文件扩展名.crx的 <code>application/x-chrome-extension</code> （Chrome据此判断crx文件是否可以可以安装）</li></ol></div><p>以IIS为例，步骤：</p><ul><li>新建一个文件夹目录，例如MyStore。设置目录ACL,添加<code>IIS_USR</code>本地账户，可读可执行；如下图：</li></ul><figure><img src="'+s+'" alt="IIS Folder Permission" tabindex="0" loading="lazy"><figcaption>IIS Folder Permission</figcaption></figure><ul><li>新建一个IIS站点，指定一个未使用的端口；网站主目录指向新建的目录 MyStore;</li><li>添加一个MIME类型。文件扩展名输入<code>.crx</code> , MIME类型填入 <code>application/x-chrome-extension</code>,如下图：</li></ul><figure><img src="'+c+`" alt="add new MIME Type" tabindex="0" loading="lazy"><figcaption>add new MIME Type</figcaption></figure><ul><li>测试商店是否工作正常。主要是验证文件是否可以下载。 <ul><li>在网站目录下放一个测试文件；</li><li>使用浏览器下载一个测试文件url，我的例子就是：</li></ul></li></ul><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://example.com:8080/mystore/test.text
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="准备扩展程序-extension" tabindex="-1"><a class="header-anchor" href="#准备扩展程序-extension" aria-hidden="true">#</a> 准备扩展程序(Extension)</h3><ul><li>准备好扩展的源码；</li><li>打开Chrome，打开【扩展】，右上角，选中【开发者模式】；</li><li>点击【加载已解压的扩展程序】载入；根据需求配置扩展选项，验证扩展工作正常；</li><li>点击【打包扩展程序】，指向源码文件夹，输出打包好的扩展, 默认是<code>&lt;源码文件夹名&gt;.crx</code>；</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果手上已经有了封装好的离线crx文件（例如从crxextractor.com下载的），可以跳过以上打包过程。</p></div><ul><li>临时安装扩展获取扩展ID。把打包好的crx文件，直接拖入到扩展程序窗口安装。安装好的扩展默认是禁用的，不可以使用，可以不理会。记下它的ID，32位，例如obpdhkhgjdcobgnomfhokfnlaofbcpcg。然后移除这个禁用的扩展，不需要了。</li><li>使用以上ID重命名crx文件，例如obpdhkhgjdcobgnomfhokfnlaofbcpcg.crx</li></ul><h3 id="准备推送扩展程序" tabindex="-1"><a class="header-anchor" href="#准备推送扩展程序" aria-hidden="true">#</a> 准备推送扩展程序</h3><ul><li>把 obpdhkhgjdcobgnomfhokfnlaofbcpcg.crx 拷贝到前面准备好的本地商店的MyStore目录下；</li><li>验证文件是否可以下载。使用浏览器打开下载url，我的例子就是：</li></ul><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://example.com:8080/mystore/obpdhkhgjdcobgnomfhokfnlaofbcpcg.crx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果没有弹窗认证，直接下载窗口就可以了；</li><li>编写扩展安装的manifest XML文件,取名update.xml。样本如下：</li></ul><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>&lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;
&lt;gupdate xmlns=&#39;http://www.google.com/update2/response&#39; protocol=&#39;2.0&#39;&gt;
  &lt;app appid=&#39;obpdhkhgjdcobgnomfhokfnlaofbcpcg
&#39;&gt;
    &lt;updatecheck codebase=&#39;https://example.com/mystore/obpdhkhgjdcobgnomfhokfnlaofbcpcg.crx&#39; version=&#39;1.0&#39; /&gt;
  &lt;/app&gt;
&lt;/gupdate&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>把<code>update.xml</code>拷贝到扩展文件同一目录并测试它的url；</li><li>记下update.xml的url；</li></ul><h3 id="开始推送扩展" tabindex="-1"><a class="header-anchor" href="#开始推送扩展" aria-hidden="true">#</a> 开始推送扩展</h3><p>开始之前，确保以下都有：</p><ul><li>Extension ID 就绪；</li><li>manifest XML的下载url就绪；</li></ul><p><strong>开始</strong></p><ul><li><p>新建一条组策略；编辑策略找到<code>Computer Configuration/Administrative Templates/Google/Extensions/Configure the list of force-installed apps and extensions</code></p></li><li><p>填入上面记下的<strong>Extension Id</strong> 和manifest XML的url,它们之间使用英文分号分开，例如：</p></li></ul><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>obpdhkhgjdcobgnomfhokfnlaofbcpcg;http://example.com/mystore/update.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>测试策略。链接策略到一个测试计算机对象OU。</li><li>验证结果。1. 查看Google策略项是否应用成功。查看chrome://policy 2. 如果扩展推送成功，用户Chrome应该可以看到扩展，且不可以删除。</li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,38),u={href:"https://docs.google.com/document/d/1pT0ZSbGdrbGvuCsVD2jjxrw-GVz-80rMS2dgkkquhTY/edit#",target:"_blank",rel:"noopener noreferrer"};function m(g,x){const i=r("ExternalLinkIcon");return n(),a("div",null,[h,e("p",null,[e("a",u,[o("Google Enterprise: Hosting your extension"),t(i)])])])}const b=l(p,[["render",m],["__file","chrome_extension_push_install.html.vue"]]);export{b as default};
