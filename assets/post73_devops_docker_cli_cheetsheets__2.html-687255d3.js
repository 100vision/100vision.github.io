import{_ as e,W as d,X as c,Y as o}from"./framework-b5535326.js";const r={},a=o(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>（续）收集一些Docker常用基础命令，这篇主要记录容器(Container)管理。 <code>镜像像是编程概念中的类，容器则是对象实例</code>，这样可以帮助理解镜像和容器的关系。</p><h2 id="正文" tabindex="-1"><a class="header-anchor" href="#正文" aria-hidden="true">#</a> 正文</h2><h3 id="docker-daemon管理" tabindex="-1"><a class="header-anchor" href="#docker-daemon管理" aria-hidden="true">#</a> Docker Daemon管理</h3><ul><li>查看dockerd配置信息。<code>docker info</code></li></ul><h3 id="容器管理类型" tabindex="-1"><a class="header-anchor" href="#容器管理类型" aria-hidden="true">#</a> 容器管理类型</h3><ul><li>创建一个docker容器但不启动，<code>docker create ...</code></li><li>创建一个docker而且启动docker。 <code>docker run ...</code>， 等于<code>docker create + docker start...</code></li><li>停止docker。<code>docker stop ...</code></li><li>启动一个docker。<code>docker start ...</code></li><li>检查一个运行中的docker配置元数据。<code>docker inspect &lt;docker name&gt;</code></li><li>查看docker的输出日志. <code>docker logs -f &lt;docker name&gt;</code></li><li>在docker内部里运行命令。<code>docker exec -it &lt;docker name&gt; &lt;shell命令&gt;</code></li></ul><h3 id="清理类" tabindex="-1"><a class="header-anchor" href="#清理类" aria-hidden="true">#</a> 清理类</h3><blockquote><p>镜像如果不清理，有时会非常吃磁盘空间。</p></blockquote><ul><li>查看docker对象使用的磁盘空间。<code>docker system df</code></li><li>删除docker。 <code>docker rm ...</code>。技巧:删除所有停止状态的docker:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker rm $(docker ps -a -q)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>删除镜像。清理无用（没有引用的镜像）<code>docker image prune -a</code></p></li><li><p>删除docker build缓存。<code>docker buildx prune -f</code></p></li><li><p>删除所有未使用/未运行的docker对象（危险！！），docker,image等,但不包括volume。<code>docker system prune -f</code>，删除未使用的卷还需要 <code>docker system prune --volumes -a -f</code></p></li></ul>`,12),i=[a];function l(t,s){return d(),c("div",null,i)}const k=e(r,[["render",l],["__file","post73_devops_docker_cli_cheetsheets__2.html.vue"]]);export{k as default};
