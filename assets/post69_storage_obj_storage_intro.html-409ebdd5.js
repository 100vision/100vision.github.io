import{_ as i,W as a,X as l,Z as e,$ as n,a0 as t,Y as r,G as s}from"./framework-b5535326.js";const h="/assets/post69_s3_obj_storage_vs_block_storage-1bd1e2e7.png",c="/assets/post69_s3_obj_storage_terminology-f4847c69.png",d="/assets/post69_s3_obj_storage_access_path-e08e2dff.png",p={},u=r('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>学习和了解对象存储。主要是了解对象存储的基础知识，以及使用场景。</p><h2 id="正文" tabindex="-1"><a class="header-anchor" href="#正文" aria-hidden="true">#</a> 正文</h2><h3 id="什么是对象存储" tabindex="-1"><a class="header-anchor" href="#什么是对象存储" aria-hidden="true">#</a> 什么是对象存储</h3><blockquote><p>对象存储，<code>Object Storage</code>，也叫做基于对象的存储。对象包含数据，但是和文件不同的是，对象在一个层结构中不会再有层级结构。每个对象都被分配一个唯一的标识符，允许一个服务器或者最终用户来检索对象，而不必知道数据的物理地址。</p></blockquote><p>以上来自百度百科，感觉就是一个键值对存储，键是唯一标识符，值就是对象（文件）。</p><blockquote><p>因为是分布式部署，又称分布式文件系统</p></blockquote><h3 id="对象存储-vs-文件存储-vs-块存储" tabindex="-1"><a class="header-anchor" href="#对象存储-vs-文件存储-vs-块存储" aria-hidden="true">#</a> 对象存储 VS 文件存储 VS 块存储</h3><p><strong>结构</strong></p><ul><li>对象存储里没有层级结构，是扁平的；传统存储有；</li></ul><p><strong>访问协议</strong></p><ul><li>对象存储是基于HTTP RESTFul API进行访问，POST，GET ，PUT和 DELETE操作；</li><li>传统文件存储通过NFS/CIFS等协议；</li><li>块存储时通过FC、iSCSI、SCSI；</li></ul><p><strong>操作对象</strong></p><p>对象存储的操作对象是对象，传统文件存储是文件夹文件，块存储级别（所以称块存储）</p>',14),_=e("img",{src:h,alt:"图源：https://zhuanlan.zhihu.com/p/426079235",tabindex:"0",loading:"lazy"},null,-1),g={href:"https://zhuanlan.zhihu.com/p/426079235",target:"_blank",rel:"noopener noreferrer"},m=r('<h3 id="对象存储特点" tabindex="-1"><a class="header-anchor" href="#对象存储特点" aria-hidden="true">#</a> 对象存储特点</h3><ul><li>容量无限大：因为有很好的扩展性，所以可以到 EB 级，多少数据都能存的下</li><li>持久可靠：11个 9 甚至以上的可靠性，数据丢失的概率比中五百万的概率还要低 2-3 个量级</li><li>低成本：1 部高清电影存 1 年，差不多也就几块钱人民币</li><li>使用方便：支持 REST 接口，主要操作为 PUT/GET/DELETE等，使用非常简单。</li></ul><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3><p>根据以上特点，可以了解到：</p><ul><li>一般用于海量数据的存储。特别适合那些<code>WORM</code>应用程序 （<strong>W</strong>rite <strong>O</strong>ne <strong>R</strong>ead <strong>M</strong>any)，</li><li>主要是非结构化数据，比如日志、音频、视频、数据备份等冷数据。</li></ul><h3 id="对象存储的关键概念" tabindex="-1"><a class="header-anchor" href="#对象存储的关键概念" aria-hidden="true">#</a> 对象存储的关键概念</h3><ul><li>桶</li><li>对象</li></ul><p>桶是对象的逻辑物理存储单元，对象放在桶里，如下： <img src="'+c+'" alt="图源：https://zhuanlan.zhihu.com/p/426079235" loading="lazy"></p><h3 id="对象存储的架构" tabindex="-1"><a class="header-anchor" href="#对象存储的架构" aria-hidden="true">#</a> 对象存储的架构</h3><ul><li>客户端访问对象存储的元数据，获取到唯一标识符(key)；</li><li>拿着标识符定位对象的位置(value)； <img src="'+d+'" alt="图源：https://zhuanlan.zhihu.com/p/426079235" loading="lazy"></li></ul><h3 id="对象存储的实现方案" tabindex="-1"><a class="header-anchor" href="#对象存储的实现方案" aria-hidden="true">#</a> 对象存储的实现方案</h3><p><strong>公有云</strong></p><ul><li>Amazon公有云的<code>Simple Storage Server</code>，简称S3</li><li>阿里云的<code>Object Storage Service</code>，简称OSS</li><li>其他</li></ul><p><strong>私有云</strong></p><p>企业私有部署可以选择比较热门的免费开源解决方案，比如：</p>',15),f={href:"https://min.io/docs/minio/kubernetes/upstream/administration/minio-console.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://baidu.com",target:"_blank",rel:"noopener noreferrer"},S=e("h3",{id:"minio-s3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#minio-s3","aria-hidden":"true"},"#"),n(" minio S3")],-1),k=e("p",null,[e("code",null,"minio"),n(", 是兼容S3的一款产品，社区支持资源比较丰富以及很丰富的SDK API接口。")],-1),x=e("p",null,[e("strong",null,"部署")],-1),E={href:"https://min.io/docs/minio/kubernetes/upstream/administration/minio-console.html",target:"_blank",rel:"noopener noreferrer"},z=e("p",null,[e("strong",null,"使用")],-1),v=e("p",null,"范例1：使用mini client for Java操作minio",-1),y={href:"https://zhuanlan.zhihu.com/p/654273720",target:"_blank",rel:"noopener noreferrer"},T=e("p",null,"范例2：ElasticSearch，OpenSearch使用minio S3作索引快照备份",-1),I={href:"https://opensearch.org/docs/1.0/opensearch/snapshot-restore/#register-repository",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,"范例3：数据备份Veeam使用minio S3作为备份存储",-1),V={href:"https://min.io/docs/minio/linux/integrations/using-minio-with-veeam.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://jorgedelacruz.uk/2020/07/22/veeam-how-to-deploy-and-configure-minio-with-erasure-coding-enabled-immutability-and-lets-encrypt/",target:"_blank",rel:"noopener noreferrer"};function w(C,P){const o=s("ExternalLinkIcon");return a(),l("div",null,[u,e("figure",null,[_,e("figcaption",null,[n("图源："),e("a",g,[n("https://zhuanlan.zhihu.com/p/426079235"),t(o)])])]),m,e("ul",null,[e("li",null,[e("a",f,[n("Minio"),t(o)]),n(",社区版（S3兼容）")]),e("li",null,[e("a",b,[n("FastDFS"),t(o)])])]),S,k,x,e("p",null,[n("可以参考：官方社区 "),e("a",E,[n("wiki"),t(o)])]),z,v,e("ul",null,[e("li",null,[e("a",y,[n("API使用范例"),t(o)])])]),T,e("ul",null,[e("li",null,[e("a",I,[n("如何把S3存储注册到OpenSearch作为快照存储"),t(o)])])]),O,e("ul",null,[e("li",null,[e("p",null,[e("a",V,[n("Veeam Replication with minio S3"),t(o)])])]),e("li",null,[e("p",null,[e("a",j,[n("Veeam: How-to Deploy, and Configure MinIO with Erasure Coding Enabled, Immutability, and Let’s Encrypt"),t(o)])])])])])}const D=i(p,[["render",w],["__file","post69_storage_obj_storage_intro.html.vue"]]);export{D as default};
