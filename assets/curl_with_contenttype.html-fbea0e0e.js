import{_ as t,W as n,X as e,Y as a}from"./framework-2e6688e7.js";const o={},s=a(`<h2 id="了解http-content-type的起因" tabindex="-1"><a class="header-anchor" href="#了解http-content-type的起因" aria-hidden="true">#</a> 了解Http Content Type的起因</h2><p>curl，一个很好的api调试工具。好几次想在Linxu Shell使用curl调试上游api接口，但我用起来不是很利索，原因之一是对<strong>Content Type</strong> 记不住有哪几种，以及它们之间的区别。</p><h2 id="什么是content-type" tabindex="-1"><a class="header-anchor" href="#什么是content-type" aria-hidden="true">#</a> 什么是Content Type</h2><blockquote><p>一般是指网页中存在的 Content-Type，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件，这就是经常看到一些 PHP 网页点击的结果却是下载一个文件或一张图片的原因。Content-Type 标头告诉客户端实际返回的内容的内容类型。</p></blockquote><h3 id="curl常用的content-type" tabindex="-1"><a class="header-anchor" href="#curl常用的content-type" aria-hidden="true">#</a> curl常用的Content Type</h3><p>使用curl做api接口测试时，常会用的Content Type:</p><ul><li>application/json</li><li>application/x-www-form-urlencoded</li></ul><p>这两个常用来做POST提交。它们的区别是：</p><ul><li>applicaton/json 提交的是json格式的数据，数据放在<strong>http body</strong>*里面。</li><li>application/x-www-form-urlencoded 提交的是类似key1=val1&amp;key2=val2键值对，数据也是放在<strong>http body</strong>里面</li></ul><div class="hint-container tip"><p class="hint-container-title">总结</p><p>它们的区别是提交的数据结构体不同，但都是在http body里面</p></div><div class="hint-container warning"><p class="hint-container-title">注意区分</p><p>Http GET方法有时也用于提交，也使用到了Parameters参数，也是以键值对形式，但提交的参数是在<strong>http header</strong>里，不是<strong>http body</strong></p></div><p>curl提交时可以直接提交本地json文件，也可以在命令行上提交json结构数据。 例1：命令行提交：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;content-type: application/json&#39;</span> <span class="token parameter variable">-X</span> POST <span class="token parameter variable">-d</span> <span class="token string">&#39;{&quot;accountType&quot;:&quot;4&quot;,&quot;channel&quot;:&quot;1&quot;}&#39;</span> http://192.168.129.xx/AntiRushServer/api/ActivityAntiRush
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),p=[s];function i(r,c){return n(),e("div",null,p)}const d=t(o,[["render",i],["__file","curl_with_contenttype.html.vue"]]);export{d as default};
