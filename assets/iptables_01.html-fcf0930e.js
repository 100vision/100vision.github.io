import{_ as i,W as t,X as l,Z as e,$ as a,a0 as s,Y as r,G as p}from"./framework-b5535326.js";const d={},o=r(`<div class="hint-container tip"><p class="hint-container-title">开始学习</p><ul><li><p>为什么学iptables。个人觉得，iptables的学习挺重要的，应用也很广，例如k8s和vpn底层都使用了iptables做网络基础。</p></li><li><p>怎么学: 重点和难点个人觉得就是表和链的使用。什么时候用什么表，用什么链。</p></li></ul></div><h1 id="iptables防火墙-表和链的使用" tabindex="-1"><a class="header-anchor" href="#iptables防火墙-表和链的使用" aria-hidden="true">#</a> iptables防火墙: 表和链的使用</h1><p>Created by: tx lin Created time: November 12, 2024 11:25 AM Tags: iptables, 防火墙</p><h2 id="总览" tabindex="-1"><a class="header-anchor" href="#总览" aria-hidden="true">#</a> 总览</h2><p><strong>4表5链</strong></p><p>表： 觉得网络包的处理方式。例如是NAT、过滤、还是修改网络包；</p><p><strong>链：</strong> 决定处理哪些网络包和处理动作。例如网络包目的地是防火墙，还是其他主机。</p><h2 id="一、表" tabindex="-1"><a class="header-anchor" href="#一、表" aria-hidden="true">#</a> 一、表</h2><hr><h3 id="表" tabindex="-1"><a class="header-anchor" href="#表" aria-hidden="true">#</a> 表</h3><p>表有4种：</p><ul><li>Filter。 是所有过滤类型的集合（iptable的默认表）</li><li>NAT 是所有NAT类的集合</li><li>Mangle 是所有修改包的集合。根据规则修改数据包的 IP 头部的一些字段，如 TTL 值、TOS 值等。这样可以影响数据包在网络中的转发方式和处理方式。mangle 表的一个常见应用场景是实现策略路由，即根据不同的数据包选择不同的路由表进行转发。例如，如果我们想要让不同端口的数据包走不同的网关出去，我们可以使用 mangle 表来给数据包打上标记，然后根据标记来指定路由表</li><li>RAW</li></ul><h3 id="表的处理优先级" tabindex="-1"><a class="header-anchor" href="#表的处理优先级" aria-hidden="true">#</a> <strong>表的处理优先级</strong></h3><p>表处理的优先级是：</p><p>RAW&gt;Mangle&gt;NAT&gt;Filter</p><h2 id="二、链" tabindex="-1"><a class="header-anchor" href="#二、链" aria-hidden="true">#</a> 二、链</h2><hr><p>决定处理哪些网络包和处理动作</p><p>链有：</p><p>Prerouting、Postrouting、Input、Output、Forward</p><h3 id="prerouting-和-postrouting" tabindex="-1"><a class="header-anchor" href="#prerouting-和-postrouting" aria-hidden="true">#</a> PreRouting 和 PostRouting</h3><p>主要用在NAT表，负责网络包地址转换的<code>SNAT</code>源地址转换和<code>DNAT</code>目标地址转换</p><ul><li>PreRouting处理到达防火墙的网络包；</li><li>PostRouting处理离开的网络包。</li></ul><div class="hint-container tip"><p class="hint-container-title">关于MASQUERADE</p><p>地址伪装，在iptables中有着和SNAT相近的效果，但也有一些区别： SNAT，DNAT，MASQUERADE都是NAT，<code>MASQUERADE是SNAT的一个特例</code>。SNAT是指在数据包从网卡发送出去的时候，把数据包中的源地址部分替换为指定的IP，这样，接收方就认为数据包的来源是被替换的那个IP的主机。MASQUERADE是用发送数据的网卡上的IP来替换源IP，因此，<strong>对于那些IP不固定的场合，比如拨号网络或者通过dhcp分配IP的情况下，就得用MASQUERADE</strong></p></div><h3 id="input链" tabindex="-1"><a class="header-anchor" href="#input链" aria-hidden="true">#</a> Input链</h3><p>主要是在Filter表。过滤目的地址是防火墙本机的网络包；</p><h3 id="output链" tabindex="-1"><a class="header-anchor" href="#output链" aria-hidden="true">#</a> Output链</h3><ul><li>可用在Filter表。过滤源地址是防火墙本身的网络包；</li><li>可用在Prerouting和Postrouting, 地址转换源地址是防火墙本身的网络包；</li><li>可用在Mangle表，修改源地址是防火墙本身的网络包</li></ul><h3 id="forward链" tabindex="-1"><a class="header-anchor" href="#forward链" aria-hidden="true">#</a> Forward链</h3><ul><li>可用在Filter表。则过滤流经防火墙的网络包，例如DNAT流量。即源地址是其他主机，目标地址是其他主机；</li></ul><h3 id="链的选择和使用" tabindex="-1"><a class="header-anchor" href="#链的选择和使用" aria-hidden="true">#</a> 链的选择和使用</h3><p>在进行包过滤和拦截时要选择正确的链，否则不生效。</p><p><strong>到达</strong></p><p>到达关键点在于网络包的目的地址。</p><ul><li>如果网络包的目的地址是防火墙本机网络接口，在选择<code>Input</code>。</li><li>如果网络包的目的地址是其他主机，则选择<code>Forward</code>；</li><li>如果网络包到达之前要修改目标地址，则加走 <code>PreRouting</code></li></ul><p><strong>离开</strong></p><p>离开选择链的关键点在于网络包的源地址</p><ul><li>如果网络包的源地址是防火墙网络接口，则选择<code>Output</code>；</li><li>如果网络包的源地址是其他主机，则选择<code>Forward</code>；</li><li>如果网络包离开后，要更改源地址，则可再使用 <code>PostRouting</code></li></ul><h2 id="三、使用举例" tabindex="-1"><a class="header-anchor" href="#三、使用举例" aria-hidden="true">#</a> 三、使用举例</h2><hr><p>也是我一直的疑惑</p><p><strong>问：我的DNAT是通过iptables实现的，映射到192.168.10.1 这台web服务器的80端口。这时我想要阻止外部公共IP地址 2.2.2.2 访问这台web服务器需要在哪台主机上设置阻止规则。</strong></p><p>答：DNAT主机（iptables) 执行了DNAT规则，将外部流量转发到 <code>192.168.10.1</code> 的80端口。这就在DNAT主机上需要使用<code>forward链</code> 在<code>FILTER表</code> 过滤阻止流量转发；规则如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 在执行DNAT规则的主机上执行以下命令
iptables -I FORWARD -s 2.2.2.2 -d 192.168.10.1 -p tcp --dport 80 -j DROP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>问：可以在192.168.10.1这台web服务器设置这个阻止规则吗？</strong></p><p>答：如果在192.168.10.1 上使用iptables的INPUT上添加规则，阻止外部2.2.2.2访问，</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 在Web服务器上执行以下命令
iptables -I INPUT -s 2.2.2.2 -p tcp --dport 80 -j DROP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>会不奏效</code>。因为：</p><ul><li>如果流量是通过DNAT规则从外部网络转发到Web服务器的，那么这些流量在到达Web服务器时，源IP地址将是执行DNAT规则的主机的IP地址，而不是外部客户端的IP地址。</li><li>因此，使用 <code>INPUT</code> 链阻止特定IP地址可能不会生效，因为流量在到达Web服务器时，源IP地址已经被转换。</li></ul><h2 id="_4、扩展-mangle表和策略路由" tabindex="-1"><a class="header-anchor" href="#_4、扩展-mangle表和策略路由" aria-hidden="true">#</a> 4、扩展：Mangle表和策略路由</h2><hr><p>mangle 表是 iptables 中用于修改数据包的标记的表，它可以在数据包经过路由表之前，根据规则修改数据包的 IP 头部的一些字段，如 TTL 值、TOS 值等。这样可以影响数据包在网络中的转发方式和处理方式。mangle 表包含五个链：PREROUTING、POSTROUTING、INPUT、OUTPUT 和 FORWARD。</p><p>mangle 表的优先级仅次于 raw 表，它会在 nat 表和 filter 表之前执行。</p><p>mangle 表的一个常见应用场景是实现策略路由，即根据不同的数据包选择不同的路由表进行转发。例如，如果我们想要让不同端口的数据包走不同的网关出去，我们可以使用 mangle 表来给数据包打上标记，然后根据标记来指定路由表。具体的步骤如下：</p><ul><li>首先，我们需要定义两个路由表，比如 10 和 20，并且分别添加默认路由到不同的网关。假设我们有两个网卡 eth1 和 eth2，分别连接到网关 202.106.x.x 和 211.108.x.x，我们可以使用 ip 命令来添加路由表：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ip</span> route <span class="token function">add</span> default via <span class="token number">202.106</span>.x.x dev eth1 table <span class="token number">10</span>
<span class="token function">ip</span> route <span class="token function">add</span> default via <span class="token number">211.108</span>.x.x dev eth2 table <span class="token number">20</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后，我们需要使用 mangle 表来给不同端口的数据包打上标记，比如我们想要让 80 和 443 端口的数据包走 eth1 网卡，而 20 和 21 端口的数据包走 eth2 网卡，我们可以使用 iptables 命令来设置 mangle 表：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-i</span> eth0 <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">80</span>:443 <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-i</span> eth0 <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">20</span>:21 <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">2</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>最后，我们需要使用 ip 命令来添加规则，让打上标记的数据包按照对应的路由表进行转发：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ip</span> rule <span class="token function">add</span> from all fwmark <span class="token number">1</span> table <span class="token number">10</span>
<span class="token function">ip</span> rule <span class="token function">add</span> from all fwmark <span class="token number">2</span> table <span class="token number">20</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、参考" tabindex="-1"><a class="header-anchor" href="#_5、参考" aria-hidden="true">#</a> 5、参考</h2>`,61),c={href:"https://www.cnblogs.com/wanghongwei-dev/p/17635179.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://homes.di.unimi.it/sisop/qemu/iptables-tutorial.pdf",target:"_blank",rel:"noopener noreferrer"};function h(b,m){const n=p("ExternalLinkIcon");return t(),l("div",null,[o,e("ul",null,[e("li",null,[e("a",c,[a("Iptables Mangle表和策略路由"),s(n)])]),e("li",null,[a("iptables Tutorial "),e("a",u,[a("https://homes.di.unimi.it/sisop/qemu/iptables-tutorial.pdf"),s(n)])])])])}const v=i(d,[["render",h],["__file","iptables_01.html.vue"]]);export{v as default};
