const e=JSON.parse(`{"key":"v-de19f5f4","path":"/zh/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/post100_ps_variable_scopes.html","title":"脚本编程：Powershell：变量作用域$global和$script","lang":"zh-CN","frontmatter":{"title":"脚本编程：Powershell：变量作用域$global和$script","icon":"page","order":99,"date":"2024-11-04T00:00:00.000Z","category":["Scripting Language","脚本编程","Powershell"],"tag":["Powershell"],"sticky":false,"star":true,"description":"前言 在一次使用过程中，1个变量一直获取不到值，调试了很久，最后搞明白是这个变量在不同作用域重复使用了。于是通过AI理解和学习一遍Powershell变量的作用域，夯实一下基础。 正文 在 PowerShell 中，作用域（Scope）决定了变量的可见性和生命周期。PowerShell 中有几种不同的作用域类型： 全局作用域（Global Scope）：在整个会话中都可见。 脚本作用域（Script Scope）：仅在定义它们的脚本文件中可见。 本地作用域（Local Scope）：仅在定义它们的函数或脚本块中可见。 私有作用域（Private Scope）：仅在定义它们的函数或脚本块中可见，并且不能被外部访问。","head":[["meta",{"property":"og:url","content":"https://blog.solex-inc.com/zh/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/post100_ps_variable_scopes.html"}],["meta",{"property":"og:site_name","content":"Tim's Blog"}],["meta",{"property":"og:title","content":"脚本编程：Powershell：变量作用域$global和$script"}],["meta",{"property":"og:description","content":"前言 在一次使用过程中，1个变量一直获取不到值，调试了很久，最后搞明白是这个变量在不同作用域重复使用了。于是通过AI理解和学习一遍Powershell变量的作用域，夯实一下基础。 正文 在 PowerShell 中，作用域（Scope）决定了变量的可见性和生命周期。PowerShell 中有几种不同的作用域类型： 全局作用域（Global Scope）：在整个会话中都可见。 脚本作用域（Script Scope）：仅在定义它们的脚本文件中可见。 本地作用域（Local Scope）：仅在定义它们的函数或脚本块中可见。 私有作用域（Private Scope）：仅在定义它们的函数或脚本块中可见，并且不能被外部访问。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T06:08:12.000Z"}],["meta",{"property":"article:tag","content":"Powershell"}],["meta",{"property":"article:published_time","content":"2024-11-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T06:08:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"脚本编程：Powershell：变量作用域$global和$script\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-26T06:08:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"正文","slug":"正文","link":"#正文","children":[{"level":3,"title":"$global: 前缀","slug":"global-前缀","link":"#global-前缀","children":[]},{"level":3,"title":"$script: 前缀","slug":"script-前缀","link":"#script-前缀","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}]}],"git":{"createdTime":1732601292000,"updatedTime":1732601292000,"contributors":[{"name":"100vision","email":"lin.tixiang@gmail.com","commits":1}]},"readingTime":{"minutes":3.5,"words":1050},"filePathRelative":"zh/信息技术/编程/post100_ps_variable_scopes.md","localizedDate":"2024年11月4日","excerpt":"<h2> 前言</h2>\\n<p>在一次使用过程中，1个变量一直获取不到值，调试了很久，最后搞明白是这个变量在不同作用域重复使用了。于是通过AI理解和学习一遍Powershell变量的作用域，夯实一下基础。</p>\\n<h2> 正文</h2>\\n<p>在 PowerShell 中，作用域（Scope）决定了变量的可见性和生命周期。PowerShell 中有几种不同的作用域类型：</p>\\n<ol>\\n<li><strong>全局作用域（Global Scope）</strong>：在整个会话中都可见。</li>\\n<li><strong>脚本作用域（Script Scope）</strong>：仅在定义它们的脚本文件中可见。</li>\\n<li><strong>本地作用域（Local Scope）</strong>：仅在定义它们的函数或脚本块中可见。</li>\\n<li><strong>私有作用域（Private Scope）</strong>：仅在定义它们的函数或脚本块中可见，并且不能被外部访问。</li>\\n</ol>","autoDesc":true}`);export{e as data};
